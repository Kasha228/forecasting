stages:
  - build-test
  - testing
  - build-release

build-test:
  stage: build-test
  image: docker:26.1.4
  before_script:
    - docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}
  script:
    - docker build --pull --rm -t ${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_SLUG}_test .
    - docker push ${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_SLUG}_test


testing:
  stage: testing
  image: python:3.11.9
  services:
    - name: postgres:latest
      alias: db
  variables:
    FF_NETWORK_PER_BUILD: 1  #allows cross-service communication, since e.g. routing service needs to communicate to traveltime service
    HOST: "0.0.0.0"
    POSTGRES_DB: "flextools_forecasting"
    POSTGRES_USER: "flextools_forecasting"
    POSTGRES_PASSWORD: "flextools_forecasting"
  before_script:
    - apt-get update && apt-get install -y postgresql-client
    - pip install -r requirements.txt
  script:
    - while ! pg_isready -h postgres -p 5432 -U $POSTGRES_USER -d $POSTGRES_DB; do sleep 1; done
    # - python -m pytest

build-release:
  stage: build-release
  image: docker:26.1.4
  before_script:
    - docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}
  script:
    - docker build --pull --rm -t ${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_SLUG} .
    - docker push ${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_SLUG}